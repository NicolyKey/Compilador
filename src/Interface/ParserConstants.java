package Interface;

public interface ParserConstants
{
    int START_SYMBOL = 36;

    int FIRST_NON_TERMINAL    = 36;
    int FIRST_SEMANTIC_ACTION = 71;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  1, -1, -1, -1, -1,  1, -1, -1,  1,  1,  1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  4, -1, -1, -1, -1,  5, -1, -1,  6,  6,  7, -1, -1,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 18, -1, -1, -1, -1, 14, -1, -1, 15, 15, 16, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, 10, -1, -1 },
        { -1, -1, 25, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 21, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 28, 28, 28, 28, -1, -1, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, 28, 28, -1, -1, -1, -1, -1, 28, -1 },
        { -1, -1, 36, -1, -1, -1, -1, 36, -1, -1, 36, 36, 36, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, 33, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 43, 43, 43, 43, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, -1, 43, -1 },
        { -1, -1, 47, 47, 47, 47, -1, -1, 48, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, 47, 47, -1, -1, -1, -1, -1, 47, -1 },
        { -1, -1, 44, -1, -1, -1, -1, 44, -1, -1, 44, 44, 44, -1, -1, 44, -1, -1, -1, 45, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, -1, -1, 44 },
        { -1, -1, 51, 51, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 51, -1, -1, -1, -1, -1, 51, -1 },
        { -1, -1, 58, 58, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 58, -1, -1, -1, -1, -1, 58, -1 },
        { -1, -1, 59, -1, -1, -1, -1, 59, -1, -1, 59, 59, 59, -1, -1, 59, -1, -1, -1, 59, 59, -1, 59, 59, 59, 59, 60, 61, -1, -1, 59, 59, -1, -1, 59 },
        { -1, -1, 52, -1, -1, -1, -1, 52, -1, -1, 52, 52, 52, -1, -1, 52, -1, -1, -1, 52, 52, -1, 53, 53, 53, 53, -1, -1, -1, -1, 52, 52, -1, -1, 52 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 55, 56, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 62, 62, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, -1, -1, -1, -1, -1, 62, -1 },
        { -1, -1, 66, 67, 68, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, 72, -1, -1, -1, -1, -1, 70, -1 },
        { -1, -1, 63, -1, -1, -1, -1, 63, -1, -1, 63, 63, 63, -1, -1, 63, -1, -1, -1, 63, 63, -1, 63, 63, 63, 63, 63, 63, 64, 65, 63, 63, -1, -1, 63 },
        { -1, -1,  2, -1, -1, -1, -1,  2, -1, -1,  2,  2,  2, -1, -1,  2, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, 23 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 13, 13, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, 30 },
        { -1, -1, 37, -1, -1, -1, -1, 37, -1, -1, 37, 37, 37, 38, 38, 37, 38, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 40, -1, -1, -1, -1, 40, -1, -1, 40, 40, 40, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 171,   7,  42,  19, 172 },
        {  43,  32,  64 },
        {  42 },
        {   0 },
        {  45,  46 },
        {  38 },
        {  39 },
        {  40 },
        {  41 },
        { 173 },
        {  33,  53, 174 },
        {   3, 175,  66 },
        {  31,  45 },
        {   0 },
        {  38 },
        {  39 },
        {  40 },
        {  41 },
        {  37 },
        {  45,  33,  53, 174 },
        {   8,  34,  48,  35 },
        {  47,   3, 176,  65 },
        {  31,  48 },
        {   0 },
        {   6, 177,  31 },
        {   0 },
        {  11,  34,  49,  35 },
        {  12,  34,  49,  35, 178 },
        {  53, 179,  67 },
        {  31,  49 },
        {   0 },
        {  13,  53, 180,  50,  51, 181,  52, 182,  19 },
        { 181,  14,  53, 183,  50,  51 },
        {   0 },
        {  15,  50 },
        {   0 },
        {  44,  32,  68 },
        {  50 },
        {   0 },
        { 184,  16,  69 },
        {  50,  70 },
        {  18,  53, 185 },
        {  17,  53, 186 },
        {  54,  55 },
        {   0 },
        {  20,  54, 187,  55 },
        {  21,  54, 188,  55 },
        {  56 },
        {   9, 189 },
        {  10, 190 },
        {  22,  54, 191 },
        {  57,  59 },
        {   0 },
        {  60, 192,  57, 193 },
        {  23 },
        {  24 },
        {  25 },
        {  26 },
        {  61,  58 },
        {   0 },
        {  27,  61, 194,  58 },
        {  28,  61, 195,  58 },
        {  62,  63 },
        {   0 },
        {  29,  62, 196,  63 },
        {  30,  62, 197,  63 },
        {   3, 198 },
        {   4, 199 },
        {   5, 200 },
        {   6, 201 },
        {  34,  53,  35 },
        {  27,  62 },
        {  28,  62, 202 }
    };

    String[] PARSER_ERROR =
    {
      "",
        "esperado EOF",//"Era esperado fim de programa",
        "esperado palavra_reservada",///"Era esperado pr",
        "esperado identificador",//"Era esperado id",
        "esperado constante_int", //"Era esperado cte_int",
        "esperado constante_float",//"Era esperado cte_real",
        "esperado constante_string",//"Era esperado string",
        "palavra reservada inválida",//"Era esperado main",
        "palavra reservada inválida",//"Era esperado read",
        "palavra reservada inválida",//"Era esperado true",
        "palavra reservada inválida",//"Era esperado false",
        "palavra reservada inválida",//"Era esperado write",
        "palavra reservada inválida",//"Era esperado writeln",
        "palavra reservada inválida",//"Era esperado if",
        "palavra reservada inválida",//"Era esperado elif",
        "palavra reservada inválida",//"Era esperado else",
        "palavra reservada inválida",//"Era esperado repeat",
        "palavra reservada inválida",//"Era esperado until",
        "palavra reservada inválida",//"Era esperado while",
        "palavra reservada inválida",//"Era esperado end",
        "esperado &&",//"Era esperado \"&&\"",
        "esperado ||",//"Era esperado \"||\"",
        "esperado !",// "Era esperado \"!\"",
        "esperado ==",//"Era esperado \"==\"",
        "esperado !=",//"Era esperado \"!=\"",
        "esperado <",//"Era esperado \"<\"",
        "esperado >",//"Era esperado \">\"",
        "esperado +",//"Era esperado \"+\"",
        "esperado -",//"Era esperado \"-\"",
        "esperado *",//"Era esperado \"*\"",
        "esperado /",//"Era esperado \"/\"",
        "esperado ,",//"Era esperado \",\"",
        "esperado ;",//"Era esperado \";\"",
        "esperado =",//"Era esperado \"=\"",
        "esperado (",//"Era esperado \"(\"",
        "esperado )",//"Era esperado \")\"",
        "esperado main",//"<classe> inválido",
        "esperado identificador",//"<cmd_atribuicao> inválido",
        "esperado read",//"<cmd_entrada> inválido",
        "esperado write writeln",//"<cmd_saida> inválido",
        "esperado if",//"<cmd_selecao> inválido",
        "esperado repeat",//"<cmd_repeticao> inválido",
        "esperado identificador read write writeln if repeat",//"<lista_instrucoes> inválido",
        "esperado identificador read write writeln if repeat",//"<instrucao> inválido",
        "esperado identificador read write writeln if repeat",//"<comando> inválido",
        "esperado identificador",//"<lista_id> inválido",
        "esperado ; =",//"<instrucao1> inválido",
        "esperado identificador constante_string",//"<opcional> inválido",
        "esperado identificador constante_string",//"<lista_entrada> inválido",
        "esperado expressao",//"<lista_expressoes> inválido",
        "esperado identificador read write writeln if repeat",//"<lista_cmd> inválido",
        "esperado elif else end",//"<elif> inválido",
        "esperado else end",//"<else> inválido",
        "esperado expressão",//"<expressao> inválido",
        "esperado expressão",//"<elemento> inválido",
        "esperado expressão",//"<expressao1> inválido",
        "esperado expressão",//"<relacional> inválido",
        "esperado expressão",//"<aritmetica> inválido",
        "esperado expressão",//"<aritmetica1> inválido",
        "esperado expressão",//"<relacional1> inválido",
        "esperado == != < >",//"<operador_relacional> inválido",
        "esperado expressão",//"<termo> inválido",
        "esperado expressão",//"<fator> inválido",
        "esperado expressão",//"<termo1> inválido",
        "esperado identificador end if read write writeln repeat",//"<lista_instrucoes_opc> inválido",
        "esperado , )",//"<id_opc> inválido",
        "esperado , ; =",//"<lista_id_opc> inválido",
        "esperado , )",//"<lista_expressoes_opc> inválido",
        "esperado identificador end if elif else read write writeln repeat until while",//"<lista_cmd_opc> inválido",
        "esperado identificador if read write writeln repeat ",//"<repeat_opc> inválido",
        "esperado until while"//"<whileOrUntil> inválido",
  
    };
}
